{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\palsahu\\\\ReactTutorial\\\\forms_and_input\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const validEmailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n  const enteredEmailIsValid = enteredEmail.match(validEmailRegex);\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log(\"Name input is valid\");\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputTextHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const emailInputTextHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n\n  const submitTextHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n    setEnteredEmail(\"\");\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitTextHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputTextHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"Name should not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emailInputTextHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"Email should be Correct\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"3frSLYHQuNc+fsZoAeINELl63/4=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["React","useState","useEffect","SimpleInput","props","enteredName","setEnteredName","enteredEmail","setEnteredEmail","enteredNameTouched","setEnteredNameTouched","enteredEmailTouched","setEnteredEmailTouched","enteredNameIsValid","trim","nameInputIsInvalid","validEmailRegex","enteredEmailIsValid","match","emailInputIsInvalid","formIsValid","console","log","nameInputTextHandler","event","target","value","emailInputTextHandler","nameInputBlurHandler","emailInputBlurHandler","submitTextHandler","preventDefault","nameInputClasses","emailInputClasses","color"],"sources":["C:/Users/palsahu/ReactTutorial/forms_and_input/src/components/SimpleInput.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched \n\n  const validEmailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n  const enteredEmailIsValid = enteredEmail.match(validEmailRegex);\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log(\"Name input is valid\");\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputTextHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const emailInputTextHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const nameInputBlurHandler = (event) => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputBlurHandler = (event) => {\n    setEnteredEmailTouched(true);\n  };\n\n  const submitTextHandler = (event) => {\n    event.preventDefault();\n\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n\n    setEnteredEmail(\"\");\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailInputClasses = emailInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={submitTextHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputTextHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && (\n          <p style={{ color: \"red\" }}>Name should not be empty</p>\n        )}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Email Address</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          onChange={emailInputTextHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputIsInvalid && (\n          <p style={{ color: \"red\" }}>Email should be Correct</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}